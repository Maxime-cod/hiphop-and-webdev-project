import * as $$hiphop from '@hop/hiphop';'use @hop/hiphop';'use hopscript';import * as hh from '@hop/hiphop';const zoom_in_cb = function () {
mach.outbuf+='********* ZOOOOOOOOOOOOOOOOOM ************\n';};const prg=$$hiphop.MODULE({'id':'prg','%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':173},'%tag':'module'},$$hiphop.SIGNAL({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':191},'direction':'INOUT','name':'ZOOM_LOCK_TOOGLE'}),$$hiphop.SIGNAL({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':191},'direction':'INOUT','name':'ZOOM_IN'}),$$hiphop.LOOP({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':227}},$$hiphop.ABORT({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':240},'%tag':'abort','immediate':false,'apply':function () {
return ((() => {
const ZOOM_LOCK_TOOGLE=this.ZOOM_LOCK_TOOGLE;return ZOOM_LOCK_TOOGLE.now;
})());
}},$$hiphop.SIGACCESS({'signame':'ZOOM_LOCK_TOOGLE','pre':false,'val':false,'cnt':false}),$$hiphop.EVERY({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':274},'%tag':'every','immediate':false,'apply':function () {
return ((() => {
const ZOOM_IN=this.ZOOM_IN;return ZOOM_IN.now;
})());
}},$$hiphop.SIGACCESS({'signame':'ZOOM_IN','pre':false,'val':false,'cnt':false}),$$hiphop.ATOM({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':302},'%tag':'pragma','apply':function () {
zoom_in_cb();}}))),$$hiphop.AWAIT({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/zoom.hh.js','pos':342},'%tag':'await','immediate':false,'apply':function () {
return ((() => {
const ZOOM_LOCK_TOOGLE=this.ZOOM_LOCK_TOOGLE;return ZOOM_LOCK_TOOGLE.now;
})());
}},$$hiphop.SIGACCESS({'signame':'ZOOM_LOCK_TOOGLE','pre':false,'val':false,'cnt':false}))));
const mach=new hh.ReactiveMachine(prg);
mach.outbuf='';mach.debug_emitted_func=(val) => {
mach.outbuf+=((val.toString()?'[ \'' + val + '\' ]\n':'[]\n'));};mach.react();mach.inputAndReact('ZOOM_IN');mach.inputAndReact('ZOOM_IN');mach.inputAndReact('ZOOM_LOCK_TOOGLE');mach.inputAndReact('ZOOM_IN');mach.inputAndReact('ZOOM_IN');mach.inputAndReact('ZOOM_LOCK_TOOGLE');mach.inputAndReact('ZOOM_IN');export { mach };
//# sourceMappingURL=/home/serrano/prgm/project/hiphop/hiphop/test/._zoom.js.map
