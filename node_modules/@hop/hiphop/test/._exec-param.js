import * as $$hiphop from '@hop/hiphop';'use @hop/hiphop';'use hopscript';import * as hh from '@hop/hiphop';const prg=$$hiphop.MODULE({'id':'prg','%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/exec-param.hh.js','pos':78},'%tag':'module'},$$hiphop.SIGNAL({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/exec-param.hh.js','pos':96},'direction':'IN','name':'IN','combine_func':(x,y) => {
return x + y;
}}),$$hiphop.EMIT({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/exec-param.hh.js','pos':138},'%tag':'emit','signame':'IN','%value':5}),$$hiphop.EXEC({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/exec-param.hh.js','pos':153},'%tag':'async','apply':function () {
const IN=this.IN;{
mach.outbuf+=('receive ' + IN.nowval) + '\n';this.notify(undefined,false);}}},$$hiphop.SIGACCESS({'signame':'IN','pre':false,'val':true,'cnt':false})));
const mach=new hh.ReactiveMachine(prg,'');
mach.outbuf='';mach.debug_emitted_func=(val) => {
mach.outbuf+=((val.toString()?'[ \'' + val + '\' ]\n':'[]\n'));};mach.inputAndReact('IN',5);mach.inputAndReact('IN',5);mach.inputAndReact('IN',5);export { mach };
//# sourceMappingURL=/home/serrano/prgm/project/hiphop/hiphop/test/._exec-param.js.map
