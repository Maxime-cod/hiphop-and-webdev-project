import * as $$hiphop from '@hop/hiphop';'use @hop/hiphop';'use hopscript';import * as hh from '@hop/hiphop';let mach=new hh.ReactiveMachine($$hiphop.MODULE({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/force-pre.hh.js','pos':119},'%tag':'module'},$$hiphop.NOTHING({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/force-pre.hh.js','pos':130},'%tag':'nothing'})));
mach.outbuf='';try {
$$hiphop.MODULE({'id':'prg','%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/force-pre.hh.js','pos':169},'%tag':'module'},$$hiphop.SIGNAL({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/force-pre.hh.js','pos':190},'direction':'OUT','name':'O','init_func':function () {
return 0;
}}),$$hiphop.EMIT({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/force-pre.hh.js','pos':212},'%tag':'emit','signame':'O','apply':function () {
return ((() => {
const O=this.O;return O.nowval;
})());
}},$$hiphop.SIGACCESS({'signame':'O','pre':false,'val':true,'cnt':false})));mach=new hh.ReactiveMachine(prg);}catch (e) {
mach.outbuf+=('error: self update') + '\n';}
export { mach };
//# sourceMappingURL=/home/serrano/prgm/project/hiphop/hiphop/test/._force-pre.js.map
