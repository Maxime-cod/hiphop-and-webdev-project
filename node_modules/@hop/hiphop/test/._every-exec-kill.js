import * as $$hiphop from '@hop/hiphop';'use @hop/hiphop';'use hopscript';import * as hh from '@hop/hiphop';const mach=new hh.ReactiveMachine($$hiphop.MODULE({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':126},'%tag':'module'},$$hiphop.SIGNAL({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':150},'direction':'INOUT','name':'S'}),$$hiphop.FRAME({'fun':function () {
let resolve=undefined;
return $$hiphop.SEQUENCE({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':126},'%tag':'frame'},$$hiphop.ATOM({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':126},'%tag':'frame','apply':function (__frame) {
resolve=(0 < __frame.length?__frame[0]:undefined);}}),$$hiphop.EVERY({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':165},'%tag':'every','immediate':false,'apply':function () {
return ((() => {
const S=this.S;return S.now;
})());
}},$$hiphop.SIGACCESS({'signame':'S','pre':false,'val':false,'cnt':false}),$$hiphop.ATOM({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':183},'%tag':'pragma','apply':function () {
mach.outbuf+=('every') + '\n';}}),$$hiphop.EXEC({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':229},'%tag':'async','apply':function () {
mach.outbuf+=('start') + '\n';setTimeout(this.notify.bind(this),500);},'killApply':function () {
mach.outbuf+=('killed') + '\n';}}),$$hiphop.ATOM({'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':384},'%tag':'pragma','apply':function () {
resolve(false);}})));
},'%location':{'filename':'/home/serrano/prgm/project/hiphop/hiphop/test/every-exec-kill.hh.js','pos':126},'%tag':'module'})));
mach.batchPromise=new Promise((res,rej) => {
return mach.init(res);
});mach.outbuf='';mach.react();mach.outbuf+=('----') + '\n';mach.inputAndReact('S');mach.outbuf+=('----') + '\n';setTimeout((() => {
return mach.inputAndReact('S');
}),100);export { mach };
//# sourceMappingURL=/home/serrano/prgm/project/hiphop/hiphop/test/._every-exec-kill.js.map
