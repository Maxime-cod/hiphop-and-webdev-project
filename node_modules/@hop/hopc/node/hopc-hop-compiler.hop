;*=====================================================================*/
;*    .../hop/hop/node_modules/hopc/node/hopc-hop-compiler.hop         */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jul  6 06:15:53 2014                          */
;*    Last change :  Thu May  2 09:35:16 2024 (serrano)                */
;*    Copyright   :  2014-24 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    Sqlite JS bindings                                               */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _hopc_hop-compiler

   (library hopscript hop js2scheme)

   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this %scope %module)
   
   (js-export (compile)
      
      (define exports (js-get %module (& "exports") %this))
      
      (define compile
	 (js-make-function %this
	    (lambda (this source target conf)
	       (let* ((src (js-tostring source %this)))
		  (if (member (suffix src) '("js" "mjs"))
		      source
		      (begin
			 (hopc src target conf %this)
			 target))))
	    (js-function-arity 3 0)
	    (js-function-info :name "compile" :len 3)))

      (js-bind! %this exports (& "compile")
	 :value compile
	 :writable #f
	 :enumerable #t)

      #unspecified))

;*---------------------------------------------------------------------*/
;*    hop-header ...                                                   */
;*---------------------------------------------------------------------*/
(define hop-header
   "import { A, ABBR, ACRONYM, ADDRESS, APPLET, AREA, ARTICLE, AUDIOm, B, BASE, BDI, BDO, BIG, BLOCKQUOTE, BODY, BR, BUTTON, CANVAS, CAPTION, CENTER, CITE, CODE, COL, COLGROUP, DATALIST, DD, DEL, DETAILS, DFN, DIR, DIV, DL, DT, EM, EMBED, FIELDSET, FIGURE, FIGCAPTION, FONT, FOOTER, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HEADER, HGROUP, HR, I, IFRAME, IMG, INPUT, INS, ISINDEX, KBD, LABEL, LEGEND, LI, LINK, MAIN, MAP, MARQUEE, MENU, MENUITEM, META, METER, NAV, NOFRAMES, NOSCRIPT, OBJECT, OL, OPTGROUP, OPTION, P, PARAM, PRE, PROGRESS, Q, S, SAMP, SCRIPT, SECTION, SELECT, SMALL, SOURCE, SPAN, STRIKE, STRONG, STYLE, SUB, SUMMARY, SUP, TABLE, TBODY, TD, TEXTAREA, TFOOT, TH, THEAD, TIME, TITLE, TR, TRACK, TT, U, UL, VAR, HTML, TILDE, DOLLAR, SVG VIDEO, XmlElement, HtmlElement, Tilde } from \"@hop/hop\";\n")

;*---------------------------------------------------------------------*/
;*    hopc ...                                                         */
;*---------------------------------------------------------------------*/
(define (hopc fname target conf %this)
   (let ((mmap (when (and (string? fname) (file-exists? fname))
		  (open-mmap fname :read #t :write #f))))
      (call-with-input-file fname
	 (lambda (in)
	    (let ((o (j2s-compile in
			:filename fname
			:mmap-src mmap
			:driver (j2s-javascript-optim-driver)
			:driver-name j2s-javascript-optim-driver
			:worker-slave #f
			:module-main #f
			:type-annotations #f
			:optim 2
			:verbose 0
			:debug (bigloo-debug)
			:warning (bigloo-warning)
			:es6-module-client #t
			:hopjs-client #t)))
	       (call-with-output-file (js-tostring target %this)
		  (lambda (out)
		     (display hop-header out)
		     (for-each (lambda (exp)
				  (unless (isa? exp J2SNode)
				     (display exp out)))
			o))))))))
