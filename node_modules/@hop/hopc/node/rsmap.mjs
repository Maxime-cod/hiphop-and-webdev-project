/*=====================================================================*/
/*    .../prgm/project/hop/hop/node_modules/hopc/node/rsmap.mjs        */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Mar 19 13:51:43 2024                          */
/*    Last change :  Tue Mar 19 14:04:05 2024 (serrano)                */
/*    Copyright   :  2024 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    remap sourcemap.                                                 */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    Import/Export                                                    */
/*---------------------------------------------------------------------*/
import * as path from "path";
import * as fs from "fs";
import { remap } from "./sourcemap.mjs";
   
/*---------------------------------------------------------------------*/
/*    usage ...                                                        */
/*---------------------------------------------------------------------*/
function usage(argv, i) {
   if (i >= 0) {
      console.log(`rsmap: wrong option "${argv[i]}" (see rsmap --help)`);
   } else {
      console.log("rsmap usage: origmap tmpmap [-o target] [--help]");
   }
   process.exit(0);
}

/*---------------------------------------------------------------------*/
/*    main ...                                                         */
/*---------------------------------------------------------------------*/
async function main(argv) {
   let orig = undefined;
   let tmp = undefined;
   let tgt = undefined;
   let i = 2;

   while (i < argv.length) {
      switch (argv[i]) {
         case "--help": {
            usage(argv, -1);
         }
         case "-o": {
            if (i < argv.length - 1) {
               tgt = argv[i+1];
               i += 2;
               break;
            } else {
               usage(argv, i);
            }
         }
         default: {
            if (tmp) {
               usage(argv, i);
            } else if (orig) {
               tmp = argv[i++];
            } else {
	       orig = argv[i++];
	    }
            break;
         }
      }
   }

   if (!orig || !tmp) {
      usage(argv, -1);
   } else {
      const smap = JSON.stringify(remap(orig, tmp));

      if (!tgt) {
	 console.log(smap);
      } else {
	 writeFileSync(smap);
      }
   }
}

/*---------------------------------------------------------------------*/
/*    toplevel                                                         */
/*---------------------------------------------------------------------*/
main(process.argv);
