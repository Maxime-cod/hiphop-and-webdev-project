/*=====================================================================*/
/*    .../project/hop/hop/node_modules/hopc/node/parser-module.js      */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Tue Mar 26 07:53:55 2024                          */
/*    Last change :  Fri Jul 19 11:34:39 2024 (serrano)                */
/*    Copyright   :  2024 Manuel Serrano                               */
/*    -------------------------------------------------------------    */
/*    Hop parser (generated from js2scheme/parser.scm)                 */
/*=====================================================================*/

/*---------------------------------------------------------------------*/
/*    The module                                                       */
/*---------------------------------------------------------------------*/
import { configGet, configAdd, confMaxInt, confMinInt } from "./config.mjs";
import { makeToken, tokenp, tokenType, tokenValue, tokenLoc,
	 queueInit, queueEmptyp, queuePush, queuePop, queuePeek } from "./token.mjs";
import { nullp, pairp, cons, cons_, car, cdr, cadr, lastPair, list, length,
	 reverse$, reverse, append, assq,
	 map, map$, forEach, find, filter, filterMap, appendMap, any,
	 iota } from "./list.mjs";
import { inputPortName, inputPortPosition, symbolp, symboltostring,
	 symboltostring$, fileSeparator, fileNameCanonicalize$, pwd,
	 makeFileName, format, memqArray,
	 flonump, bignump, procedurep, fixnumtollong, substring,
	 stringPrefixp, stringIndexRight, stringtosymbol, stringUpcase,
	 gensym,
	 declUsageHasp, symbolAppend } from "./utils.mjs";
import { makeLoc, Location, read_rp, readLine, locFilename, locOffset } from "./reader.mjs";
import { j2sReservedIdp, j2sLexer, j2sRegexLexer, j2sTemplateLexer, j2sEscapeJsString } from "./lexer.mjs";
import { htmlParser } from "./html.mjs";
import { $ioParseError } from "./error.mjs";
import { J2SNode, J2SProgram, J2SBlock,
	 J2SImport, J2SImportName, J2SImportDynamic,
	 J2SExport, J2SExportDefault,
	 J2SRedirect, J2SRedirectNamespace,
	 J2SStmt, J2SStmtExpr, J2SNop,
	 J2SVarDecls, J2SDecl, J2SDeclDestructure,
	 J2SDeclInit, J2SDeclInitDestructure, J2SDeclRest,
	 J2SExpr, J2SParen, J2SSequence,
	 J2SAccess, J2SSeq, J2SCond, J2SObjInit,
	 J2SFun, J2SArrow, J2SDeclFun, J2SSvc, J2SDeclSvc, J2SReturn, J2SYield, 
	 J2SIf, J2SIfArgDefVal, J2SSwitch, J2SCase, J2SDefault,
	 J2SCatch, J2STry, J2SThrow,
	 J2SFor, J2SForIn, J2SWhile, J2SDo, J2SBreak, J2SContinue,
	 J2SCall, J2SNew, 
	 J2SString, J2SUndefined, J2SNull, J2SBool, J2SNumber, J2SOctalNumber,
	 J2SRegExp, J2SArray, J2SArrayAbsent,
	 J2SUnresolvedRef, J2SHopRef, J2SRef,
	 J2SPropertyInit, J2SDataPropertyInit, J2SAccessorPropertyInit, J2SMethodPropertyInit,
	 J2SSpread, J2SDConsumer, J2SDProducer,
	 J2SAssig, J2SAssigOp, J2SPrefix, J2SPostfix,
	 J2SBindExit, J2SUnary, J2SBinary, J2STemplate,
	 J2SDeclClass, J2SClass, J2SClassElement, 
	 J2SDollar, J2STilde,
	 TsInterface, TsInterfaceProperty, TsInterfacePropertyName,
	 TsType, TsTypeArray, TsTypeFunction, TsTypeBinary }
         from "./ast.mjs";
