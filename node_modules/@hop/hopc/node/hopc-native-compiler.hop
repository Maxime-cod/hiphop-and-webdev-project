;*=====================================================================*/
;*    .../hop/hop/node_modules/hopc/node/hopc-native-compiler.hop      */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jul  6 06:15:53 2014                          */
;*    Last change :  Thu Mar  7 16:20:38 2024 (serrano)                */
;*    Copyright   :  2014-24 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    Sqlite JS bindings                                               */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _sqlite

   (library hopscript hop hopwidget nodejs)

   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    js-function ...                                                  */
;*---------------------------------------------------------------------*/
(define-macro (js-function id name . size)
   `(js-make-function %this
       ,id
       (js-function-arity ,id)
       (js-function-info :name ,name :len 0)
       :size ,(if (pair? size) (car size) 1)))
   
;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this %scope %module)
   
   (js-export (compile)
      
      (define exports (js-get %module (& "exports") %this))
      
      (define compile
	 (with-access::JsGlobalObject %this (function-prototype)
	    (js-make-function %this
	       (lambda (this source conf)
		  (tprint "ICI")
		  source)
	       (js-function-arity 2 0)
	       (js-function-info :name "Database" :len 2)
	       :prototype function-prototype)))

      (js-bind! %this exports (& "compile")
	 :value compile
	 :writable #f
	 :enumerable #t)
